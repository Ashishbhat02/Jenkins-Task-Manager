pipeline {
    agent {
        docker {
            image 'node:18-alpine'
            reuseNode true
        }
    }

    environment {
        DOCKER_IMAGE = 'taskmanager-frontend'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
                sh 'pwd'
                sh 'ls -la'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('taskmanager-frontend') {
                    // Use workspace-local npm cache to avoid permission issues
                    sh 'npm config set cache ./npm-cache'
                    sh 'npm install'
                }
            }
            post {
                success {
                    echo 'Dependencies installed successfully ✅'
                }
            }
        }

        stage('Code Quality Check') {
            steps {
                dir('taskmanager-frontend') {
                    script {
                        try {
                            sh 'npm run lint || true'
                        } catch (Exception e) {
                            echo "Linting not configured: ${e.message}"
                        }
                    }
                }
            }
        }

        stage('Build React App') {
            steps {
                dir('taskmanager-frontend') {
                    sh 'npm run build'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: 'taskmanager-frontend/build/**/*', fingerprint: true
                    echo 'React app built successfully ✅'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('taskmanager-frontend') {
                    script {
                        try {
                            sh 'npm test -- --watchAll=false --coverage'
                        } catch (Exception e) {
                            echo "Tests failed or not configured: ${e.message}"
                        }
                    }
                }
            }
            post {
                always {
                    publishHTML([
                        allowMissing: true,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'taskmanager-frontend/coverage/lcov-report',
                        reportFiles: 'index.html',
                        reportName: 'Frontend Test Coverage'
                    ])
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image from the frontend folder
                    docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}", './taskmanager-frontend')
                    sh "docker tag ${DOCKER_IMAGE}:${env.BUILD_NUMBER} ${DOCKER_IMAGE}:latest"
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo 'Frontend build completed successfully! ✅'
        }
        failure {
            echo 'Frontend build failed! ❌'
        }
    }
}
